name: Lint and Test Charts

on: pull_request

env:
  CM_NAME: cert-manager
  CM_VERSION: 1.10.0
  CHART: capi-operator

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.8.1

      - uses: azure/setup-kubectl@v3
        with:
          version: 'v1.26.2'

      - name: Install CM verifier
        uses: giantswarm/install-binary-action@v1.1.0
        with:
          download_url: https://github.com/alenkacz/${binary}/releases/download/v${version}/${binary}_${version}_Linux_x86_64.tar.gz
          tarball_binary_path: cm-verifier
          binary: "cert-manager-verifier"
          version: "0.3.0"
          smoke_test: "cm-verifier -h"

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1
        with:
          version: v3.5.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config ct.yaml

      - name: Create kind cluster
        uses: helm/kind-action@v1.5.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Install dependencies (cert-manager)
        if: steps.list-changed.outputs.changed == 'true'
        shell: bash
        run: |
          echo "Installing  ${{ env.CM_NAME}} - ${{ env.CM_VERSION }} as '${{ env.CM_NAME}}' ..."
          kubectl apply -f https://github.com/${{ env.CM_NAME}}/${{ env.CM_NAME}}/releases/download/v${{ env.CM_VERSION }}/${{ env.CM_NAME}}.yaml
          echo "Successfully installed cert-manager ${{ env.CM_VERSION }}."
          cm-verifier
          kubectl create ns ${{ env.CHART }}-system

      - name: Run chart-testing (install)
        run: |
          ct install --config ct.yaml
