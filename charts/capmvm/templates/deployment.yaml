apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "infrastructure.fullname" . }}-controller-manager
  labels:
    cluster.x-k8s.io/provider: infrastructure-microvm
    clusterctl.cluster.x-k8s.io: ""
    control-plane: controller-manager
  {{- include "infrastructure.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "infrastructure.fullname" . }}-controller-manager
  labels:
    cluster.x-k8s.io/provider: infrastructure-microvm
    clusterctl.cluster.x-k8s.io: ""
    control-plane: controller-manager
  {{- include "infrastructure.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-mvm
      control-plane: controller-manager
    {{- include "infrastructure.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-mvm
        control-plane: controller-manager
      {{- include "infrastructure.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            weight: 10
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
            weight: 10
      containers:
      - args:
        - --leader-elect
        {{- if .Values.controllerManager.manager.extraArgs }}
        {{-  range .Values.controllerManager.manager.extraArgs }}
        - {{ . }}
        {{- end }}
        {{ end }}
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
          periodSeconds: 10
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10
          }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      imagePullSecrets:
      - name: capmvm-private-image-cred
      serviceAccountName: {{ include "infrastructure.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capmvm-webhook-service-cert